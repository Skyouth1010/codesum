1、客户端
    a、使用方式：
	两种方式，api，和ebox一样，或者统一一个动态代理类，使用配置加载
	服务框架可以用jar包放到各自的应用里，或者作为容器的一部分，或者自己作为一个容器
    b、通讯方式
	和服务端的通信可以采用硬件负载，或者软件负载，软件负载可以使用服务注册中心，在服务注册中心获取到服务以后，通过软负载查找到自己要调用的服务端（随机、轮询、权重计算等）
    c、接口、方法、参数的路由
	基于接口路由，调用接口a到机器a，调用接口b到机器b，这样如果接口a响应很慢，不会影响接口b的调用。同理，更细的粒度，可以基于方法、参数进行路由。
    d、多机房
	服务框架可以对地址进行过滤，不同机房的服务调用通过过滤走自己机房的服务
    e、流控处理
	当每秒进行的请求超过一定次数，拒绝对远程的请求
    前面从组装请求到寻址、路由，接着就是序列化了
    f、序列化反序列化
    g、网络通信
    h、支持多种异步服务调用方式
	单向oneway，callback回调，future方式，可靠异步
    i、使用future方式对远程服务调用的优化
	比如需要调用多个服务时，采用future方式，把所有请求发出后，一起等待响应结果
2、服务端
    a、服务的暴露
	一种方式是ebox的方式，当定义了txcode后，就会注册到服务列表中，另一种方式是统一一个动态代理类，使用配置加载，在动态代理类中把服务注册到服务注册中心
    b、不同服务可以通过线程池隔离，互不干扰